<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="dataGridViewImageColumn1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAVtJREFUSEtj
        GAWjYBSMHOBXuXVtQMV2BSiXfsCvauv/wJqd3wLrdnX4NmzmggrTHoAsbt/0+n/65LPfA2t2fPCr3prR
        0NDABJWmHQBZ3L39AxjXr37yP6rtwOeA2h03/Ku3WEGV0AYgWwzCXds+/C9bfOdfcP3Or8H1O9Z6lW6V
        gCqlLkC3GIY7t777nz390q+Amu3fAqq3N3vmbmOHaqEOwGUxDDete/E/sef456Danc/8q7f5QrVRDghZ
        3LL+5f+EnuNfAmt3vPSt3hoM1UY5wGVxx+a3wJR+7kdAzY4vgdXbi9LSzrBCtVAHYCau9/8L5lz/G1QL
        jNva7TMDK9cJQ5VSFyBbXLPi0f/w5n2fgcF6IaBiizFUCW0AyOLm9S/+x3cd/RpQs+21X/WWUAaG/4xQ
        adoBkMXA7PLNv3r7VO+KLYJQYdoDoMVb/Cp2qEC5o2AUjIIRDxgYACJADJn0nZkJAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6v9TKur/Uyrq/1Iq6clVK+oMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFIp
        6nxTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Iq6nkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUyvqqFMq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/UyvqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABTKuqqUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKuqqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMq6qpTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6qoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUyrqqlMq6v9TKur/Uyrq/1Qr64kAAP8BAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/wFTK+uKUyrq/1Mq6v9TKur/UyrqqgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTKuqqUyrq/1Mq6v9TKur/UivqYAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQq6mFTKur/Uyrq/1Mq
        6v9TKuqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMq6qpTKur/Uyrq/1Mq
        6v9TKuq2AAD/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8BUyrquFMq
        6v9TKur/Uyrq/1Mq6qoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUyrqqlMq
        6v9TKur/Uyrq/1Mq6v9TK+uWSSTbBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASSTbB1Mq
        6ZlTKur/Uyrq/1Mq6v9TKur/UyrqqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABTKuqqUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKurXVCrrW1Uc4wkAAAAAAAAAAAAAAAAAAAAATTPmClMq
        6VxTK+rYUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKuqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFMq6qpTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq91Mq6s5TKuu7Uyrru1Mq
        6s5TKur3Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6qoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAUyrqqlMq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/UyrqqgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTKuqqUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKuqqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMq6qpTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq11Ir605OJ+sNTifrDVQq6E9TK+rYUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6qoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUyrqqlMq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6dVbJO0OAAAAAAAAAAAAAAAAAAAAAFUi7g9TKurXUyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/UyrqqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTKuqqUyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/UyvrTQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQq6E9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKuqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMq
        6qpTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9dLugLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATifrDVMq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6qoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAUyrqqlMq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Ur6gwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABbJO0OUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/UyrqqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABTKuqqUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/UyvrTQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFQq6E9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKuqqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMq6qpTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKunVTifrDQAA
        AAAAAAAAAAAAAAAAAABbJO0OUyrq11Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6qoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUyrqqlMq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKurPUinrS1km5hRZJuYUVCzrTFMq6tBTKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/UyrqqgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTKuqqUyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKuqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFMq6qpTKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6qoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUyvqqFMq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/UyvqqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABSKep8Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9SKup5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFsk7Q5TKerLUyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq
        6v9TKur/Uyrq/1Mq6v9TKur/Uyrq/1Mq6v9TKur/UirpyVUr6gwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFUA/wNTLOs0VCrqVVQq6lVUKupVVCrqVVQq6lVUKupVVCrqVVQq
        6lVUKupVVCrqVVQq6lVUKupVVCrqVVQq6lVUKupVVCrqVVMs6zRVAP8DAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////wAAD/8AAA/+AAAH/gAAB/4AAAf+D/8H/h/
        /h/4P/wf+B/4H/gP8B/4AAAf+AAAH/gAAB/4A8Af+AfgH/gP8B/4D/Af+A/wH/gP8B/4B+Af+APAH/gA
        AB/4AAAf+AAAH/wAAD/8AAA/////////////////
</value>
  </data>
</root>